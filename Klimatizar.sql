-- MySQL Script generated by MySQL Workbench
-- 09/21/16 23:10:59
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Klimatizar
-- -----------------------------------------------------
-- Base de datos proyecto Sistematizacion Klimatizar Colombia SAS

-- -----------------------------------------------------
-- Schema Klimatizar
--
-- Base de datos proyecto Sistematizacion Klimatizar Colombia SAS
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Klimatizar` DEFAULT CHARACTER SET utf8 ;
USE `Klimatizar` ;

-- -----------------------------------------------------
-- Table `Klimatizar`.`Cargo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`Cargo` (
  `codigoCargo` INT NOT NULL AUTO_INCREMENT COMMENT 'codigo con el cual se identifica el cargo del empleado',
  `NombreCargo` VARCHAR(45) NOT NULL COMMENT 'Nombre del cargo con el que se va a desempeñar el empleado en la empresa',
  `Descripcion` VARCHAR(100) NOT NULL COMMENT 'Pequeña descripcion de las funciones del empleado',
  PRIMARY KEY (`codigoCargo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`EPS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`EPS` (
  `idEPS` INT NOT NULL AUTO_INCREMENT COMMENT 'Código con el cual se identifica la EPS\n',
  `nombreEPS` VARCHAR(45) NOT NULL COMMENT 'Nombre de la EPS',
  PRIMARY KEY (`idEPS`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`ARL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`ARL` (
  `idARL` INT NOT NULL AUTO_INCREMENT COMMENT 'Código con el cual se identifica el ARL',
  `nombreARL` VARCHAR(45) NOT NULL COMMENT 'Nombre de la ARL',
  PRIMARY KEY (`idARL`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`AFP`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`AFP` (
  `idAFP` INT NOT NULL AUTO_INCREMENT COMMENT 'Código con el cual se identifica la AFP',
  `nombreAFP` VARCHAR(45) NOT NULL COMMENT 'Nombre de la AFP',
  PRIMARY KEY (`idAFP`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`Empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`Empleado` (
  `Documento` VARCHAR(30) NOT NULL COMMENT 'Numero de identificacion ',
  `NombreCompleto` VARCHAR(45) NOT NULL COMMENT 'Nombre completo del empleado',
  `Direccion` VARCHAR(40) NOT NULL COMMENT 'Direccion de residencia del empleado',
  `Telefono` VARCHAR(30) NOT NULL COMMENT 'Número telefonico de contacto\n',
  `Correo` VARCHAR(45) NULL COMMENT 'Medio para enviar y recibir mensajes\ncon el empleado',
  `FechaNacimiento` DATE NOT NULL COMMENT 'Fecha de nacimiento del empleado',
  `Cargo_codigoCargo` INT NOT NULL COMMENT 'Código de identificación del puesto del empleado \n',
  `EPS_idEPS` INT NOT NULL COMMENT 'Código con el cual se identifica la EPS',
  `ARL_idARL` INT NOT NULL COMMENT 'Código con el cual se identifica la ARL',
  `AFP_idAFP` INT NOT NULL COMMENT 'Código con el cual se identifica la AFP',
  PRIMARY KEY (`Documento`, `Cargo_codigoCargo`, `EPS_idEPS`, `ARL_idARL`, `AFP_idAFP`),
  INDEX `fk_Empleado_Cargo_idx` (`Cargo_codigoCargo` ASC),
  INDEX `fk_Empleado_EPS1_idx` (`EPS_idEPS` ASC),
  INDEX `fk_Empleado_ARL1_idx` (`ARL_idARL` ASC),
  INDEX `fk_Empleado_AFP1_idx` (`AFP_idAFP` ASC),
  CONSTRAINT `fk_Empleado_Cargo`
    FOREIGN KEY (`Cargo_codigoCargo`)
    REFERENCES `Klimatizar`.`Cargo` (`codigoCargo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Empleado_EPS1`
    FOREIGN KEY (`EPS_idEPS`)
    REFERENCES `Klimatizar`.`EPS` (`idEPS`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Empleado_ARL1`
    FOREIGN KEY (`ARL_idARL`)
    REFERENCES `Klimatizar`.`ARL` (`idARL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Empleado_AFP1`
    FOREIGN KEY (`AFP_idAFP`)
    REFERENCES `Klimatizar`.`AFP` (`idAFP`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`Cliente` (
  `codigoCliente` INT NOT NULL AUTO_INCREMENT COMMENT 'Código con el cual se identifica el cliente\n',
  `nombreCliente` VARCHAR(45) NOT NULL COMMENT 'Nombre del cliente\n',
  `direccion` VARCHAR(40) NULL COMMENT 'Direccion del cliente\n',
  `telefono` VARCHAR(30) NOT NULL COMMENT 'Telefono del cliente\n',
  PRIMARY KEY (`codigoCliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`Producto` (
  `codigoProducto` VARCHAR(45) NOT NULL COMMENT 'Código  por el que se identifican el producto\n',
  `nombreProducto` VARCHAR(100) NOT NULL COMMENT 'Nombre por el cual conocemos del producto\n',
  `detalleProducto` VARCHAR(45) NOT NULL COMMENT 'Pequeña descripción del producto\n',
  PRIMARY KEY (`codigoProducto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`CodigoOrden`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`CodigoOrden` (
  `idCodigoOrden` INT NOT NULL COMMENT 'Código por el cual se identifica la orden de compra',
  PRIMARY KEY (`idCodigoOrden`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`OrdenDeCompra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`OrdenDeCompra` (
  `CodigoOrden_idCodigoOrden` INT NOT NULL COMMENT 'Código por el cual se identifica la orden de compra',
  `Fecha` DATE NOT NULL COMMENT 'Fecha en la que hace la orden de compra\n',
  `Item` VARCHAR(30) NOT NULL COMMENT 'Enumeracion dentro de la orden de compra\n',
  `Producto_codigoProducto` VARCHAR(45) NOT NULL COMMENT 'Código  por el que se identifican el producto',
  `unidad` VARCHAR(20) NOT NULL COMMENT 'Unidad de medida\n',
  `cantidad` INT NOT NULL COMMENT 'Cantidad de productos para comprar',
  `precioUnitario` DOUBLE NOT NULL COMMENT 'Precio de cada producto\n',
  `subTotal` DOUBLE NOT NULL COMMENT 'Valor unitario por la cantidad',
  `valorTotal` DOUBLE NOT NULL COMMENT 'Valor total del producto',
  `IVA` DOUBLE NOT NULL COMMENT 'Impuesto valor agregado',
  `AutorizadoPor_EmpleadoDocumento` VARCHAR(30) NOT NULL COMMENT 'Documento con el cual se identifica el empleado\n',
  `Cliente_codigoCliente` INT NOT NULL COMMENT 'Código con el cual se identifica el cliente\n',
  PRIMARY KEY (`CodigoOrden_idCodigoOrden`, `Item`, `Producto_codigoProducto`, `AutorizadoPor_EmpleadoDocumento`, `Cliente_codigoCliente`),
  INDEX `fk_OrdenDeCompra_Empleado1_idx` (`AutorizadoPor_EmpleadoDocumento` ASC),
  INDEX `fk_OrdenDeCompra_comprador1_idx` (`Cliente_codigoCliente` ASC),
  INDEX `fk_OrdenDeCompra_Producto1_idx` (`Producto_codigoProducto` ASC),
  INDEX `fk_OrdenDeCompra_CodigoOrden1_idx` (`CodigoOrden_idCodigoOrden` ASC),
  CONSTRAINT `fk_OrdenDeCompra_Empleado1`
    FOREIGN KEY (`AutorizadoPor_EmpleadoDocumento`)
    REFERENCES `Klimatizar`.`Empleado` (`Documento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrdenDeCompra_comprador1`
    FOREIGN KEY (`Cliente_codigoCliente`)
    REFERENCES `Klimatizar`.`Cliente` (`codigoCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrdenDeCompra_Producto1`
    FOREIGN KEY (`Producto_codigoProducto`)
    REFERENCES `Klimatizar`.`Producto` (`codigoProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrdenDeCompra_CodigoOrden1`
    FOREIGN KEY (`CodigoOrden_idCodigoOrden`)
    REFERENCES `Klimatizar`.`CodigoOrden` (`idCodigoOrden`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`CodigoRemision`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`CodigoRemision` (
  `idCodigoRemision` INT NOT NULL COMMENT 'Código por el cual se identifica la remision del material',
  PRIMARY KEY (`idCodigoRemision`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`RemisionMaterial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`RemisionMaterial` (
  `CodigoRemision_idCodigoRemision` INT NOT NULL COMMENT 'Código por el cual se identifica la remision del material',
  `Fecha` DATE NOT NULL COMMENT 'Fecha de la remision de  material',
  `Item` VARCHAR(30) NOT NULL COMMENT 'Enumeracion en la remision de material\n',
  `codigoProducto` INT NOT NULL COMMENT 'Código  por el que se identifican los productos\n',
  `unidad` VARCHAR(20) NOT NULL COMMENT 'Unidad de medida\n',
  `cantidad` INT NOT NULL COMMENT 'Cantidad de productos comprados\n',
  `precioUnitario` DOUBLE NOT NULL COMMENT 'Precio unitario del producto',
  `valorTotal` DOUBLE NOT NULL COMMENT 'Precio total de los productos\n',
  `entregadoPor` VARCHAR(45) NOT NULL COMMENT 'Nombre de la persona que realizo la remision\n',
  `recibidoPor` VARCHAR(45) NOT NULL COMMENT 'Nombre de la persona que recibio la remision\n',
  `OrdenDeCompra_CodigoOrden_idCodigoOrden` INT NOT NULL COMMENT 'Código por el cual se identifica la orden de compra',
  PRIMARY KEY (`CodigoRemision_idCodigoRemision`, `OrdenDeCompra_CodigoOrden_idCodigoOrden`, `Item`),
  INDEX `fk_RemisionMaterial_OrdenDeCompra1_idx` (`OrdenDeCompra_CodigoOrden_idCodigoOrden` ASC),
  INDEX `fk_RemisionMaterial_CodigoRemision1_idx` (`CodigoRemision_idCodigoRemision` ASC),
  CONSTRAINT `fk_RemisionMaterial_OrdenDeCompra1`
    FOREIGN KEY (`OrdenDeCompra_CodigoOrden_idCodigoOrden`)
    REFERENCES `Klimatizar`.`OrdenDeCompra` (`CodigoOrden_idCodigoOrden`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RemisionMaterial_CodigoRemision1`
    FOREIGN KEY (`CodigoRemision_idCodigoRemision`)
    REFERENCES `Klimatizar`.`CodigoRemision` (`idCodigoRemision`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`Proveedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`Proveedor` (
  `nombreProveedor` VARCHAR(45) NOT NULL COMMENT 'Nombre  del Proveedor',
  `NIT` VARCHAR(35) NOT NULL COMMENT 'Identificación del proveedor\n',
  `direccion` VARCHAR(40) NOT NULL COMMENT 'Direccion del proveedor\n',
  `telefono` VARCHAR(30) NULL COMMENT 'Numero de contacto de proveedor',
  `contactoVenta` VARCHAR(45) NOT NULL COMMENT 'Nombre del vendedor ',
  `correo` VARCHAR(45) NULL COMMENT 'Correo proveedor',
  `celular` VARCHAR(30) NOT NULL COMMENT 'Numero de contacto del proveedor',
  PRIMARY KEY (`NIT`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`Obra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`Obra` (
  `codigoObra` VARCHAR(45) NOT NULL COMMENT 'Código con el cual se identifica la obra',
  `contratante` VARCHAR(45) NOT NULL COMMENT 'Nombre contratante',
  `descripcion` VARCHAR(100) NOT NULL COMMENT 'Breve descripcion del proyecto\n',
  `nombreObra` VARCHAR(45) NOT NULL COMMENT 'Nombre con el cual se identifica la obra',
  PRIMARY KEY (`codigoObra`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`Devolucion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`Devolucion` (
  `codigoDevolucion` INT NOT NULL AUTO_INCREMENT COMMENT 'Código por el cual se identifica la devolucion\n',
  `decripcion` VARCHAR(100) NOT NULL COMMENT 'Motivo con respecto a la devolucion \n',
  `fechaHora` DATETIME NOT NULL COMMENT 'Fecha Y hora en la cual fue la devolucion\n',
  `Producto_codigoProducto` VARCHAR(45) NOT NULL COMMENT 'Codigo con el cual se identifica el producto\n \n',
  `Obra_codigoObra` VARCHAR(45) NOT NULL COMMENT 'Código con el cual se identifica la obra',
  PRIMARY KEY (`codigoDevolucion`, `Producto_codigoProducto`, `Obra_codigoObra`),
  INDEX `fk_Devolucion_Producto1_idx` (`Producto_codigoProducto` ASC),
  INDEX `fk_Devolucion_Obra1_idx` (`Obra_codigoObra` ASC),
  CONSTRAINT `fk_Devolucion_Producto1`
    FOREIGN KEY (`Producto_codigoProducto`)
    REFERENCES `Klimatizar`.`Producto` (`codigoProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Devolucion_Obra1`
    FOREIGN KEY (`Obra_codigoObra`)
    REFERENCES `Klimatizar`.`Obra` (`codigoObra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`FichaTecnica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`FichaTecnica` (
  `codigoFicha` INT NOT NULL COMMENT 'Código con el cual se identifica la ficha técnica\n',
  `descripcion` VARCHAR(100) NOT NULL COMMENT 'Breve descripción del proyecto\n',
  `fechaInicio` DATE NOT NULL COMMENT 'Fecha en la que inició el proyecto\n',
  `fechaFin` DATE NOT NULL COMMENT 'Fecha en la que finalizó el proyecto\n',
  `duracion` VARCHAR(45) NOT NULL COMMENT 'Duración del proyecto\n',
  `valorTotalProyecto` DOUBLE NOT NULL COMMENT 'Valor total del proyecto\n',
  `Obra_codigoObra` VARCHAR(45) NOT NULL COMMENT 'Código con el cual se identifica la obra',
  PRIMARY KEY (`codigoFicha`, `Obra_codigoObra`),
  INDEX `fk_FichaTecnica_Obra1_idx` (`Obra_codigoObra` ASC),
  CONSTRAINT `fk_FichaTecnica_Obra1`
    FOREIGN KEY (`Obra_codigoObra`)
    REFERENCES `Klimatizar`.`Obra` (`codigoObra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`CodigoSolicitud`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`CodigoSolicitud` (
  `idCodigoSolicitud` INT NOT NULL COMMENT 'Código por el cual se identifica la solicitud',
  PRIMARY KEY (`idCodigoSolicitud`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`DatosGenerales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`DatosGenerales` (
  `idDatosGenerales` INT NOT NULL COMMENT 'codigo con el que se identifica los datos generales',
  `fecha` DATE NULL COMMENT 'Fecha en la que fue solicitada la requisición\n',
  `Obra_codigoObra` VARCHAR(45) NOT NULL COMMENT 'Código con el cual se identifica la obra',
  `SolicitadoPor_DocumentoEmpleado` VARCHAR(30) NOT NULL COMMENT 'Nombre de la persona que realizo la solicitud\n',
  PRIMARY KEY (`idDatosGenerales`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`SolicitudDeMaterial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`SolicitudDeMaterial` (
  `CodigoSolicitud_idCodigoSolicitud` INT NOT NULL COMMENT 'Código por el cual se identifica la solicitud de material',
  `Item` VARCHAR(30) NOT NULL COMMENT 'Codigo con el cual se identifica el item\n',
  `descripcionProducto` VARCHAR(100) NOT NULL COMMENT 'Descripcion del producto solicitado\n',
  `unidad` VARCHAR(20) NOT NULL COMMENT 'Unidad de medida\n',
  `cantidad` VARCHAR(50) NOT NULL COMMENT 'Cantidad de productos solicitados\n',
  `observaciones` VARCHAR(45) NOT NULL COMMENT 'Observacion con respecto al producto \n',
  `DatosGenerales_idDatosGenerales` INT NOT NULL COMMENT 'codigo con el que se identifica los datos generales',
  PRIMARY KEY (`CodigoSolicitud_idCodigoSolicitud`, `Item`, `DatosGenerales_idDatosGenerales`),
  INDEX `fk_SolicitudDeMaterial_CodigoSolicitud1_idx` (`CodigoSolicitud_idCodigoSolicitud` ASC),
  INDEX `fk_SolicitudDeMaterial_DatosGenerales1_idx` (`DatosGenerales_idDatosGenerales` ASC),
  CONSTRAINT `fk_SolicitudDeMaterial_CodigoSolicitud1`
    FOREIGN KEY (`CodigoSolicitud_idCodigoSolicitud`)
    REFERENCES `Klimatizar`.`CodigoSolicitud` (`idCodigoSolicitud`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SolicitudDeMaterial_DatosGenerales1`
    FOREIGN KEY (`DatosGenerales_idDatosGenerales`)
    REFERENCES `Klimatizar`.`DatosGenerales` (`idDatosGenerales`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`Empleado_has_FichaTecnica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`Empleado_has_FichaTecnica` (
  `Empleado_Documento` VARCHAR(30) NOT NULL COMMENT 'Numero de identificacion  del empleado\n',
  `FichaTecnica_codigoFicha` INT NOT NULL COMMENT 'Código con el cual se identifica la ficha técnica\n',
  PRIMARY KEY (`Empleado_Documento`, `FichaTecnica_codigoFicha`),
  INDEX `fk_Empleado_has_Ficha Tecnica_Ficha Tecnica1_idx` (`FichaTecnica_codigoFicha` ASC),
  INDEX `fk_Empleado_has_Ficha Tecnica_Empleado1_idx` (`Empleado_Documento` ASC),
  CONSTRAINT `fk_Empleado_has_Ficha Tecnica_Empleado1`
    FOREIGN KEY (`Empleado_Documento`)
    REFERENCES `Klimatizar`.`Empleado` (`Documento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Empleado_has_Ficha Tecnica_Ficha Tecnica1`
    FOREIGN KEY (`FichaTecnica_codigoFicha`)
    REFERENCES `Klimatizar`.`FichaTecnica` (`codigoFicha`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`CodigoSolicitudCliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`CodigoSolicitudCliente` (
  `Cliente_codigoCliente` INT NOT NULL COMMENT 'Codigo con el que se identifica el cliente ',
  PRIMARY KEY (`Cliente_codigoCliente`),
  INDEX `fk_CodigoSolicitudCliente_Cliente1_idx` (`Cliente_codigoCliente` ASC),
  CONSTRAINT `fk_CodigoSolicitudCliente_Cliente1`
    FOREIGN KEY (`Cliente_codigoCliente`)
    REFERENCES `Klimatizar`.`Cliente` (`codigoCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`SolicitudDeMaterial_has_cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`SolicitudDeMaterial_has_cliente` (
  `SolicitudDeMaterial_CodigoSolicitud_idCodigoSolicitud` INT NOT NULL COMMENT 'Código por el cual se identifica la solicitud de material',
  `CodigoSolicitudCliente_Cliente_codigoCliente` INT NOT NULL COMMENT 'Codigo con el cual se identifica el cliente\n',
  PRIMARY KEY (`SolicitudDeMaterial_CodigoSolicitud_idCodigoSolicitud`, `CodigoSolicitudCliente_Cliente_codigoCliente`),
  INDEX `fk_SolicitudDeMaterial_has_cliente_SolicitudDeMaterial1_idx` (`SolicitudDeMaterial_CodigoSolicitud_idCodigoSolicitud` ASC),
  INDEX `fk_SolicitudDeMaterial_has_cliente_CodigoSolicitudCliente1_idx` (`CodigoSolicitudCliente_Cliente_codigoCliente` ASC),
  CONSTRAINT `fk_SolicitudDeMaterial_has_cliente_SolicitudDeMaterial1`
    FOREIGN KEY (`SolicitudDeMaterial_CodigoSolicitud_idCodigoSolicitud`)
    REFERENCES `Klimatizar`.`SolicitudDeMaterial` (`CodigoSolicitud_idCodigoSolicitud`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SolicitudDeMaterial_has_cliente_CodigoSolicitudCliente1`
    FOREIGN KEY (`CodigoSolicitudCliente_Cliente_codigoCliente`)
    REFERENCES `Klimatizar`.`CodigoSolicitudCliente` (`Cliente_codigoCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Klimatizar`.`Proveedor_has_Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Klimatizar`.`Proveedor_has_Producto` (
  `Proveedor_NIT` VARCHAR(35) NOT NULL COMMENT 'Identificación del proveedor',
  `Producto_codigoProducto` VARCHAR(45) NOT NULL COMMENT 'Código  por el que se identifican el producto\n',
  PRIMARY KEY (`Proveedor_NIT`, `Producto_codigoProducto`),
  INDEX `fk_Proveedor_has_Producto_Producto1_idx` (`Producto_codigoProducto` ASC),
  INDEX `fk_Proveedor_has_Producto_Proveedor1_idx` (`Proveedor_NIT` ASC),
  CONSTRAINT `fk_Proveedor_has_Producto_Proveedor1`
    FOREIGN KEY (`Proveedor_NIT`)
    REFERENCES `Klimatizar`.`Proveedor` (`NIT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Proveedor_has_Producto_Producto1`
    FOREIGN KEY (`Producto_codigoProducto`)
    REFERENCES `Klimatizar`.`Producto` (`codigoProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/Cargo.csv'
        INTO TABLE Cargo
         FIELDS TERMINATED BY  ';'
         LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (NombreCargo,Descripcion);

         INSERT INTO ARL(idARL,nombreARL)
         values(1,'Sura');

          INSERT INTO AFP(idAFP,nombreAFP)
         values(1,'Porvenir'),(2,'Proteccion'),(3,'Colfondos');
         INSERT INTO EPS(idEPS,nombreEPS)
         values(1,'Cafesalud'),(2,'Compensar'),(3,'Coomeva'),(4,'Eps Sanitas'),(5,'Famisanar');

            INSERT INTO CodigoSolicitud (idCodigoSolicitud)
      values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10);

        INSERT INTO CodigoOrden (idCodigoOrden)
      values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10);
       INSERT INTO CodigoRemision(idCodigoRemision)
      values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10);

      SET FOREIGN_KEY_CHECKS=0;

      INSERT INTO CodigoSolicitudCliente (Cliente_codigoCliente)
      values (1),(2),(3);

        LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/Empleado.csv'
        INTO TABLE Empleado
         FIELDS TERMINATED BY  ';'
         LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (Documento,NombreCompleto,Direccion,Telefono,Correo,FechaNacimiento,Cargo_codigoCargo,EPS_idEPS,ARL_idARL,AFP_idAFP);

        LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/Obra.txt'
        INTO TABLE obra
         FIELDS TERMINATED BY  ','
         LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (codigoObra,contratante,descripcion,nombreObra);

        SET FOREIGN_KEY_CHECKS=0;

        LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/DatosGenerales.txt'
        INTO TABLE DatosGenerales
         FIELDS TERMINATED BY  ','
         LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (idDatosGenerales,fecha,SolicitadoPor_DocumentoEmpleado,Obra_codigoObra);

         LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/SolicitudMaterial.csv'
        INTO TABLE SolicitudDeMaterial
         FIELDS TERMINATED BY  ';'
         LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (CodigoSolicitud_idCodigoSolicitud,Item,descripcionProducto,unidad,cantidad,observaciones,DatosGenerales_idDatosGenerales);

         LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/Producto.csv'
        INTO TABLE Producto
         FIELDS TERMINATED BY  ';'
         LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (codigoProducto,nombreProducto,detalleProducto);

        LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/Cliente.csv'
        INTO TABLE Cliente
         FIELDS TERMINATED BY  ';'
         LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (nombreCliente,direccion,telefono);

        LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/SolicitudMaterialCliente1.csv'
        INTO TABLE SolicitudDeMaterial_has_cliente
         FIELDS TERMINATED BY  ';'
         LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (CodigoSolicitudCliente_Cliente_codigoCliente,SolicitudDeMaterial_CodigoSolicitud_idCodigoSolicitud);

        LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/OrdenDeCompra.csv'
        INTO TABLE OrdenDeCompra
         FIELDS TERMINATED BY  ';'
         LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (CodigoOrden_idCodigoOrden,Fecha,Item,Producto_codigoProducto,unidad,cantidad,precioUnitario,subTotal,valorTotal,IVA,AutorizadoPor_EmpleadoDocumento,Cliente_codigoCliente);

        
        SET FOREIGN_KEY_CHECKS=0;

        LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/RemisionMaterial.txt'
        INTO TABLE RemisionMaterial
        FIELDS TERMINATED BY  ','
        LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (CodigoRemision_idCodigoRemision,Fecha,Item,codigoProducto,unidad,cantidad,precioUnitario,valorTotal,entregadoPor,recibidoPor,OrdenDeCompra_CodigoOrden_idCodigoOrden);

        LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/Proveedor.csv'
        INTO TABLE Proveedor
        FIELDS TERMINATED BY  ';'
        LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (nombreProveedor,NIT,direccion,telefono,contactoVenta,correo,celular);

        LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/ProveedorProducto.csv'
        INTO TABLE Proveedor_has_Producto
        FIELDS TERMINATED BY  ';'
        LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (Proveedor_NIT,Producto_codigoProducto);


        LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/FichaTecnica.txt'
        INTO TABLE FichaTecnica
        FIELDS TERMINATED BY  ','
        LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (codigoFicha,descripcion,fechaInicio,fechaFin,duracion,valorTotalProyecto,Obra_codigoObra);

           LOAD DATA local INFILE  'I:/Sistematizacion_inventario_Klimatizar/Presentacion/DatosDB/FichaTecnicaEmpleado.txt'
        INTO TABLE Empleado_has_FichaTecnica
        FIELDS TERMINATED BY  ','
        LINES TERMINATED BY  '\r\n'
        IGNORE 1 LINES (Empleado_Documento,FichaTecnica_codigoFicha);
        
desc afp;
desc arl;
desc cargo;
desc  cliente;
desc  codigoorden;
desc  codigoremision;
desc  codigosolicitud;
desc  codigosolicitudcliente;
desc  datosgenerales;
desc  devolucion;
desc  empleado;
desc  empleado_has_fichatecnica;
desc eps;
desc  fichatecnica;
desc  obra;
desc  ordendecompra;
desc from producto;
desc from proveedor;
desc from proveedor_has_producto;
desc from remisionmaterial;
desc from solicituddematerial;
desc from solicituddematerial_has_cliente;

select*from afp;
select*from arl;
select*from cargo;
select*from cliente;
select*from codigoorden;
select*from codigoremision;
select*from codigosolicitud;
select*from codigosolicitudcliente;
select*from datosgenerales;
select*from devolucion;
select*from empleado;
select*from empleado_has_fichatecnica;
select*from eps;
select*from fichatecnica;
select*from obra;
select*from ordendecompra;
select*from producto;
select*from proveedor;
select*from proveedor_has_producto;
select*from remisionmaterial;
select*from solicituddematerial;
select*from solicituddematerial_has_cliente;

select count(*)from afp;
select count(*)from arl;
select count(*)from cargo;
select count(*)from cliente;
select count(*)from codigoorden;
select count(*)from codigoremision;
select count(*)from codigosolicitud;
select count(*)from codigosolicitudcliente;
select count(*)from datosgenerales;
select count(*)from devolucion;
select count(*)from empleado;
select count(*)from empleado_has_fichatecnica;
select count(*)from eps;
select count(*)from fichatecnica;
select count(*)from obra;
select count(*)from ordendecompra;
select count(*)from producto;
select count(*)from proveedor;
select count(*)from proveedor_has_producto;
select count(*)from remisionmaterial;
select count(*)from solicituddematerial;
select*from solicituddematerial_has_cliente;

   select nombreProducto,avg(valorTotal)
   from producto,ordendecompra
   where (producto.codigoProducto=ordendecompra.Producto_codigoProducto)
   group by producto.codigoProducto
   order by nombreProducto asc;
   
select distinct nombreProducto from producto;

   select empleado.nombreCompleto as Empleado , 
   arl.nombreArl as NombreARL
   from empleado,ARL
   where(empleado.ARL_idARL=ARL.idARL);

   select empleado.nombreCompleto as Empleado , 
   eps.nombreEPS as NombreEPS
   from empleado,EPS
   where(empleado.EPS_idEPS=EPS.idEPS);

   select empleado.nombreCompleto as Empleado , 
   AFP.nombreAFP as NombreAFP
   from empleado,AFP
   where(empleado.AFP_idAFP=AFP.idAFP);

select ordendecompra.CodigoOrden_idCodigoOrden as NumeroOrden , 
   Producto.nombreProducto as Producto
   from ordendecompra,Producto
   where(ordendecompra.Producto_codigoProducto=producto.codigoProducto)
   order by nombreProducto asc;

SELECT CodigoOrden_idCodigoOrden,fecha,item,Producto_codigoProducto FROM ordendecompra
 INNER JOIN producto WHERE ordendecompra.Producto_codigoProducto= producto.codigoProducto;


 select nombreProducto as Producto, count(CodigoOrden_idCodigoOrden)as ordendecompra
         from Producto,ordendecompra
             where(producto.codigoProducto=ordendecompra.Producto_codigoProducto)
             group by Producto.nombreProducto;

select FichaTecnica.descripcion,codigoFicha,duracion,valorTotalProyecto from FichaTecnica 
INNER JOIN Obra where FichaTecnica.Obra_codigoObra=Obra.codigoObra;

select contratante,obra.descripcion,nombreObra from obra 
INNER JOIN fichatecnica where Obra.codigoObra=FichaTecnica.Obra_codigoObra;


  select nombreObra,avg(valorTotalProyecto) as Promedio
   from obra,fichatecnica
   where (obra.codigoObra=fichatecnica.Obra_codigoObra)
   group by obra.codigoObra
   order by nombreObra asc;


SELECT nombreProveedor,direccion,telefono,contactoVenta from Proveedor
INNER JOIN Proveedor_has_Producto where Proveedor.NIT=Proveedor_has_Producto.Proveedor_NIT;

select cast( fecha as date )as Dia, count(fecha) as total
from ordendecompra
group by cast(fecha as date);

select cast(FechaNacimiento as date) from empleado;

select cast(FechaNacimiento as date) from empleado where fechaNacimiento>='1985-01-01';

select Item,descripcionProducto,unidad,cantidad from solicituddematerial
INNER JOIN solicituddematerial_has_cliente 
where solicituddematerial_has_cliente.solicituddematerial_codigosolicitud_idcodigosolicitud=solicituddematerial.codigosolicitud_idcodigosolicitud;

select count(*)empleado_documento,count(*)fichatecnica_codigoficha from empleado_has_fichatecnica
INNER JOIN fichatecnica where empleado_has_fichatecnica.fichatecnica_codigoficha=fichatecnica.codigoficha;


select empleado_documento as documento,count(*)fichatecnica_codigoficha from empleado_has_fichatecnica
inner join empleado where empleado.documento=empleado_has_fichatecnica.empleado_documento;
